Program MyFormatter;
{$APPTYPE CONSOLE}
{$R *.res}
uses
  {$IFNDEF FPC}
  System.SysUtils,
  System.Rtti,
  {$ENDIF }
  ASTNode in 'ASTNode.pas',
  Lexer in 'Lexer.pas',
  Parser in 'Parser.pas',
  Test in 'Test\Test.pas',
  KeywordRule in 'LexerRule\Template\KeywordRule.pas',
  SymbolRule in 'LexerRule\Template\SymbolRule.pas',
  ArrayAccessNode in 'AST\ArrayAccessNode.pas',
  BinaryOpNode in 'AST\BinaryOpNode.pas',
  DerefNode in 'AST\DerefNode.pas',
  IdNode in 'AST\IdNode.pas',
  LiteralNode in 'AST\LiteralNode.pas',
  MemberRefNode in 'AST\MemberRefNode.pas',
  UnaryOpNode in 'AST\UnaryOpNode.pas',
  AndRule in 'LexerRule\AndRule.pas',
  AsRule in 'LexerRule\AsRule.pas',
  AtRule in 'LexerRule\AtRule.pas',
  ColonRule in 'LexerRule\ColonRule.pas',
  CommaRule in 'LexerRule\CommaRule.pas',
  DivRule in 'LexerRule\DivRule.pas',
  DotRule in 'LexerRule\DotRule.pas',
  EofRule in 'LexerRule\EofRule.pas',
  EqualRule in 'LexerRule\EqualRule.pas',
  GERule in 'LexerRule\GERule.pas',
  GTRule in 'LexerRule\GTRule.pas',
  IdRule in 'LexerRule\IdRule.pas',
  InRule in 'LexerRule\InRule.pas',
  IsRule in 'LexerRule\IsRule.pas',
  LBrack2Rule in 'LexerRule\LBrack2Rule.pas',
  LBrackRule in 'LexerRule\LBrackRule.pas',
  LERule in 'LexerRule\LERule.pas',
  LParentRule in 'LexerRule\LParentRule.pas',
  LTRule in 'LexerRule\LTRule.pas',
  MinusRule in 'LexerRule\MinusRule.pas',
  ModRule in 'LexerRule\ModRule.pas',
  MulRule in 'LexerRule\MulRule.pas',
  NotEqualRule in 'LexerRule\NotEqualRule.pas',
  NotRule in 'LexerRule\NotRule.pas',
  NumRule in 'LexerRule\NumRule.pas',
  OrRule in 'LexerRule\OrRule.pas',
  PlusRule in 'LexerRule\PlusRule.pas',
  PointerRule in 'LexerRule\PointerRule.pas',
  RBrack2Rule in 'LexerRule\RBrack2Rule.pas',
  RBrackRule in 'LexerRule\RBrackRule.pas',
  RParentRule in 'LexerRule\RParentRule.pas',
  ShlRule in 'LexerRule\ShlRule.pas',
  ShrRule in 'LexerRule\ShrRule.pas',
  SlashRule in 'LexerRule\SlashRule.pas',
  XorRule in 'LexerRule\XorRule.pas',
  AddFactorRuleUnit in 'ProductionRule\AddFactorRuleUnit.pas',
  AddOpRuleUnit in 'ProductionRule\AddOpRuleUnit.pas',
  ExprRuleUnit in 'ProductionRule\ExprRuleUnit.pas',
  MulOpRuleUnit in 'ProductionRule\MulOpRuleUnit.pas',
  RelFactorRuleUnit in 'ProductionRule\RelFactorRuleUnit.pas',
  RelOpRuleUnit in 'ProductionRule\RelOpRuleUnit.pas',
  SignOpRuleUnit in 'ProductionRule\SignOpRuleUnit.pas',
  TermRuleUnit in 'ProductionRule\TermRuleUnit.pas',
  VarRuleUnit in 'ProductionRule\VarRuleUnit.pas',
  List in 'Util\List.pas',
  StringUtils in 'Util\StringUtils.pas',
  Trie in 'Util\Trie.pas',
  TypeDef in 'Util\TypeDef.pas',
  SignFactorRuleUnit in 'ProductionRule\SignFactorRuleUnit.pas';

Begin
  ReportMemoryLeaksOnShutdown := True;
  Test1();
End.
